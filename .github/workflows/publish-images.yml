name: Publish images (volume-s3 & rclone)

on:
  push:
    paths:
      - 'volume-s3/**'
  schedule:
    - cron: '0 3 * * 1'  # 每周一 03:00 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-push-rclone:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Determine build context (rclone)
        id: ctx_rclone
        run: |
          set -euo pipefail
          if [ -d ./volume-s3/images/volume-s3-rclone ]; then
            echo "ctx=./volume-s3/images/volume-s3-rclone" >> $GITHUB_OUTPUT
          elif [ -d ./images/volume-s3-rclone ]; then
            echo "ctx=./images/volume-s3-rclone" >> $GITHUB_OUTPUT
          else
            echo "rclone Dockerfile path not found" >&2
            exit 1
          fi

      - name: Compute upstream rclone digest
        id: digest_rclone
        run: |
          set -euo pipefail
          UPSTREAM=$(docker buildx imagetools inspect rclone/rclone:latest | awk '/Digest: sha256/ {print $2; exit}')
          echo "upstream_digest=$UPSTREAM" >> $GITHUB_OUTPUT

      - name: Fetch previous rclone image (GHCR)
        id: prev_rclone
        continue-on-error: true
        run: |
          set -euo pipefail
          IMG=ghcr.io/${{ github.repository_owner }}/volume-s3-rclone:latest
          docker pull "$IMG" || true
          PREV=$(docker image inspect --format '{{ index .Config.Labels "org.opencontainers.image.base.digest" }}' "$IMG" 2>/dev/null || echo "")
          echo "prev_digest=$PREV" >> $GITHUB_OUTPUT

      - name: Decide whether to build rclone
        id: decide_rclone
        run: |
          if [ "${{ steps.prev_rclone.outputs.prev_digest }}" = "${{ steps.digest_rclone.outputs.upstream_digest }}" ] && [ -n "${{ steps.prev_rclone.outputs.prev_digest }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push rclone (GHCR)
        if: steps.decide_rclone.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        id: build_rclone
        with:
          context: ${{ steps.ctx_rclone.outputs.ctx }}
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/volume-s3-rclone:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Rclone image for volume-s3 with allow_other enabled
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.base.digest=${{ steps.digest_rclone.outputs.upstream_digest }}

      - name: Mirror rclone to Docker Hub
        if: ${{ steps.decide_rclone.outputs.changed == 'true' && env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        run: |
          set -euo pipefail
          DIGEST=${{ steps.build_rclone.outputs.digest }}
          docker buildx imagetools create \
            --tag docker.io/${{ env.DOCKERHUB_USERNAME }}/volume-s3-rclone:latest \
            ${DIGEST}

  build-push-volume-s3:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Compute source digest (volume-s3)
        id: digest_vs3
        run: |
          set -euo pipefail
          cd volume-s3
          files=( Dockerfile scripts/entrypoint.sh go.mod go.sum $(git ls-files internal || true) )
          sha=$(sha256sum "${files[@]}" 2>/dev/null | awk '{print $1}' | sha256sum | awk '{print $1}')
          echo "source_digest=$sha" >> $GITHUB_OUTPUT

      - name: Fetch previous volume-s3 image (GHCR)
        id: prev_vs3
        continue-on-error: true
        run: |
          set -euo pipefail
          IMG=ghcr.io/${{ github.repository_owner }}/volume-s3:latest
          docker pull "$IMG" || true
          PREV=$(docker image inspect --format '{{ index .Config.Labels "org.opencontainers.image.revision.digest" }}' "$IMG" 2>/dev/null || echo "")
          echo "prev_digest=$PREV" >> $GITHUB_OUTPUT

      - name: Decide whether to build volume-s3
        id: decide_vs3
        run: |
          if [ "${{ steps.prev_vs3.outputs.prev_digest }}" = "${{ steps.digest_vs3.outputs.source_digest }}" ] && [ -n "${{ steps.prev_vs3.outputs.prev_digest }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push volume-s3 (GHCR)
        if: steps.decide_vs3.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        id: build_vs3
        with:
          context: ./volume-s3
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/volume-s3:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Swarm/Docker S3 volume controller
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.revision.digest=${{ steps.digest_vs3.outputs.source_digest }}

      - name: Mirror volume-s3 to Docker Hub
        if: ${{ steps.decide_vs3.outputs.changed == 'true' && env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        run: |
          set -euo pipefail
          DIGEST=${{ steps.build_vs3.outputs.digest }}
          docker buildx imagetools create \
            --tag docker.io/${{ env.DOCKERHUB_USERNAME }}/volume-s3:latest \
            ${DIGEST}


